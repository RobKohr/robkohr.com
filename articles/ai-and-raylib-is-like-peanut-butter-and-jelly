
<!DOCTYPE html>
  <html>
      <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />            
        <base href="../">  
                <title>AI and raylib is like peanut butter and jelly - RobKohr's Blog</title>

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-600316-3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag("js", new Date());

  gtag("config", "UA-600316-3");
</script>

<link rel="alternate" type="application/rss+xml" title="RobKohr's Blog" href="/rss.xml" />
<link rel="shortcut icon" type="image/ico" href="/favicon.ico">
<link rel="stylesheet" href="/libs/highlight/styles/dark.min.css">
<script src="./libs/highlight/highlight.min.js"></script>
<script src="./image-lazy-loader.js"></script>

                <link rel="canonical" href="https://robkohr.com/articles/ai-and-raylib-is-like-peanut-butter-and-jelly" />
                <link rel="stylesheet" href="../neat.css">
<meta property="og:image" content="https://robkohr.com/images/20250813130114 AI and Raylib as peanutbutter and jelly.png" />
                <meta property="og:description" content="![[20250813130114 AI and Raylib as peanutbutter and jelly.png]]My day job is working on enterprise scale React web applications with thousands of files. Our company is wading into the AI agent realm a" />
            </head>
            <body>
            <a href="./index.html">&larr; Home</a>
            
    <h2><a href="articles/ai-and-raylib-is-like-peanut-butter-and-jelly">AI and raylib is like peanut butter and jelly</a></h2>
    <div class="variables">
    <div class="date">@date=2025-08-13</div>
    <div class="tags">@tags=<a href="tags/untagged">untagged</a></div>
    </div>
    <article>
        <p><img data-src="images/20250813130114 AI and Raylib as peanutbutter and jelly.png" alt="20250813130114 AI and Raylib as peanutbutter and jelly.png" style="max-width: 100%;" /></p>
<p>My day job is working on enterprise scale React web applications with thousands of files. </p>
<p>Our company is wading into the AI agent realm and I have been using Cursor there and will be trying Claude code next week.</p>
<p>I have to say it has been a fun time, and pretty eye opening as to what AI is good at and what it is bad at.</p>
<ul>
<li>It is really good at helping make sense of something you don&#39;t have knowledge about</li>
<li>It is really good at doing lots detail oriented but obvious stuff that you can spell out in detail.</li>
</ul>
<p>It is bad at:</p>
<ul>
<li>doing general sweeping changes</li>
<li>think about things and not being a dunderhead</li>
</ul>
<p>So, if you don&#39;t know a language at all, but you understand the psudocode perfectly of what you want it to achieve, and you spell it out for AI and do it one piece at a time testing it along the way and reading everything it does, then you are golden.</p>
<p>Now this brings be to Raylib and C, and how I started using them. I decided to skip out on game engines because I am more of a coder, and I also had dealing with a huge amount of prebuilt parts that you need a gui to assemble together, and thus you need to read a lot of documentation or watch videos to understand so much. </p>
<p>Working with an api is great, but with work and life, learning raylib and c seemed like a bridge too far, but with AI I can speak to my codebase with pseudocode and then learn what it does and then start making changes by hand. </p>
<p>And this is also where a big gap between engines and frameworks start to close together. </p>
<p>With engines, like Unity and Godot, the prebuilt components saved you time from having to write obvious code, but now, any component that you can pull out of your imagination, as long as it is well thought out, can appear with a simple request, and be perfectly tailored to what you are looking for. With a collection of primitives that Raylib provide, and a general understanding of software engineering, you don&#39;t have to dig into the metaphorical box of parts that are provided to you, you can summon the perfect part, and you don&#39;t have to know C or Raylib all too well to be able to do so, because you have an idiotic, but knowledgeable assistant to enlighten you.</p>
<p>I guess that the TLDR summary is that AI paired with Raylib basically gives you that toybox of parts that engines to, but the box becomes infinite and doesn&#39;t rely on you needing know all the things available to you.</p>

    </article>
    
            </body>
          </html>
          